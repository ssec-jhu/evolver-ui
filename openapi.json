{
  "openapi": "3.1.0",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "paths": {
    "/hardware/": {
      "get": {
        "tags": [
          "hardware"
        ],
        "summary": "Get All Hardware",
        "operationId": "get_all_hardware_hardware__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/hardware/{hardware_name}": {
      "get": {
        "tags": [
          "hardware"
        ],
        "summary": "Get Hardware",
        "operationId": "get_hardware_hardware__hardware_name__get",
        "parameters": [
          {
            "name": "hardware_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Hardware Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/hardware/{hardware_name}/set": {
      "post": {
        "tags": [
          "hardware"
        ],
        "summary": "Hardware Set",
        "operationId": "hardware_set_hardware__hardware_name__set_post",
        "parameters": [
          {
            "name": "hardware_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Hardware Name"
            }
          },
          {
            "name": "commit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Commit"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object"
                  },
                  {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                ],
                "title": "Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/hardware/{hardware_name}/commit": {
      "post": {
        "tags": [
          "hardware"
        ],
        "summary": "Hardware Commit",
        "operationId": "hardware_commit_hardware__hardware_name__commit_post",
        "parameters": [
          {
            "name": "hardware_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Hardware Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/hardware/{hardware_name}/calibrator/procedure/start": {
      "post": {
        "tags": [
          "hardware"
        ],
        "summary": "Start Calibration Procedure",
        "operationId": "start_calibration_procedure_hardware__hardware_name__calibrator_procedure_start_post",
        "parameters": [
          {
            "name": "hardware_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Hardware Name"
            }
          },
          {
            "name": "resume",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Resume"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/hardware/{hardware_name}/calibrator/procedure/actions": {
      "get": {
        "tags": [
          "hardware"
        ],
        "summary": "Get Calibrator Actions",
        "operationId": "get_calibrator_actions_hardware__hardware_name__calibrator_procedure_actions_get",
        "parameters": [
          {
            "name": "hardware_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Hardware Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/hardware/{hardware_name}/calibrator/procedure/dispatch": {
      "post": {
        "tags": [
          "hardware"
        ],
        "summary": "Dispatch Calibrator Action",
        "operationId": "dispatch_calibrator_action_hardware__hardware_name__calibrator_procedure_dispatch_post",
        "parameters": [
          {
            "name": "hardware_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Hardware Name"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Action"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/hardware/{hardware_name}/calibrator/procedure/state": {
      "get": {
        "tags": [
          "hardware"
        ],
        "summary": "Get Calibrator State",
        "operationId": "get_calibrator_state_hardware__hardware_name__calibrator_procedure_state_get",
        "parameters": [
          {
            "name": "hardware_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Hardware Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/hardware/{hardware_name}/calibrator/procedure/undo": {
      "post": {
        "tags": [
          "hardware"
        ],
        "summary": "Undo Calibration Procedure Action",
        "operationId": "undo_calibration_procedure_action_hardware__hardware_name__calibrator_procedure_undo_post",
        "parameters": [
          {
            "name": "hardware_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Hardware Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/hardware/{hardware_name}/calibrator/procedure/save": {
      "post": {
        "tags": [
          "hardware"
        ],
        "summary": "Save Calibration Procedure",
        "operationId": "save_calibration_procedure_hardware__hardware_name__calibrator_procedure_save_post",
        "parameters": [
          {
            "name": "hardware_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Hardware Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/hardware/{hardware_name}/calibrator/data": {
      "get": {
        "tags": [
          "hardware"
        ],
        "summary": "Get Calibration Data",
        "operationId": "get_calibration_data_hardware__hardware_name__calibrator_data_get",
        "parameters": [
          {
            "name": "hardware_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Hardware Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/hardware/{hardware_name}/calibrator/output_transformer": {
      "get": {
        "tags": [
          "hardware"
        ],
        "summary": "Get Calibration Output Transformer",
        "operationId": "get_calibration_output_transformer_hardware__hardware_name__calibrator_output_transformer_get",
        "parameters": [
          {
            "name": "hardware_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Hardware Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Describe Evolver",
        "operationId": "describe",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Update Evolver",
        "operationId": "update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EvolverConfigWithoutDefaults"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/state": {
      "get": {
        "summary": "Get State",
        "operationId": "state",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/schema/": {
      "get": {
        "summary": "Get Schema",
        "operationId": "schema",
        "parameters": [
          {
            "name": "classinfo",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "description": "fully qualified class name"
                },
                {
                  "type": "null"
                }
              ],
              "default": "evolver.device.Evolver",
              "title": "Classinfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/history/": {
      "post": {
        "summary": "Get History",
        "operationId": "history",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          },
          {
            "name": "t_start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "title": "T Start"
            }
          },
          {
            "name": "t_stop",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "title": "T Stop"
            }
          },
          {
            "name": "n_max",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "N Max"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Body_history"
                  }
                ],
                "title": "Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoryResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/event": {
      "post": {
        "summary": "Post Event",
        "operationId": "post_event_event_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventInfo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/healthz": {
      "get": {
        "summary": "Healthz",
        "operationId": "healthcheck",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/calibration_status/": {
      "get": {
        "summary": "Calibration Status",
        "operationId": "calibration_status_calibration_status__get",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/calibrate/{name}": {
      "post": {
        "summary": "Calibrate",
        "operationId": "calibrate_calibrate__name__post",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/abort": {
      "post": {
        "summary": "Abort",
        "operationId": "abort_abort_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/start": {
      "post": {
        "summary": "Start",
        "operationId": "start_start_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_history": {
        "properties": {
          "kinds": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Kinds",
            "default": [
              "sensor"
            ]
          },
          "vials": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vials"
          },
          "properties": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties"
          }
        },
        "type": "object",
        "title": "Body_history"
      },
      "ConfigDescriptor": {
        "properties": {
          "classinfo": {
            "type": "string",
            "title": "Classinfo",
            "description": "fully qualified class name"
          },
          "config": {
            "type": "object",
            "title": "Config",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "classinfo"
        ],
        "title": "ConfigDescriptor"
      },
      "EventInfo": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "vial": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vial"
          },
          "data": {
            "type": "object",
            "title": "Data",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "name",
          "message"
        ],
        "title": "EventInfo"
      },
      "EvolverConfigWithoutDefaults": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "experiment": {
            "type": "string",
            "title": "Experiment"
          },
          "vial_layout": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "maxItems": 3,
            "minItems": 2,
            "title": "Vial Layout",
            "description": "The layout of the vials in 2 or 3 dimensions. Always left-to-right bottom-top-top order."
          },
          "vials": {
            "items": {},
            "type": "array",
            "title": "Vials"
          },
          "hardware": {
            "additionalProperties": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ConfigDescriptor"
                },
                {
                  "$ref": "#/components/schemas/evolver__hardware__interface__HardwareDriver__Config"
                }
              ]
            },
            "type": "object",
            "title": "Hardware"
          },
          "controllers": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ConfigDescriptor"
                },
                {
                  "$ref": "#/components/schemas/evolver__controller__interface__Controller__Config"
                }
              ]
            },
            "type": "array",
            "title": "Controllers"
          },
          "serial": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConfigDescriptor"
              },
              {
                "$ref": "#/components/schemas/evolver__connection__interface__Connection__Config"
              }
            ],
            "title": "Serial"
          },
          "history": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConfigDescriptor"
              },
              {
                "$ref": "#/components/schemas/evolver__history__interface__History__Config"
              }
            ],
            "title": "History"
          },
          "enable_control": {
            "type": "boolean",
            "title": "Enable Control"
          },
          "interval": {
            "type": "integer",
            "title": "Interval"
          },
          "raise_loop_exceptions": {
            "type": "boolean",
            "title": "Raise Loop Exceptions"
          },
          "abort_on_control_errors": {
            "type": "boolean",
            "title": "Abort On Control Errors"
          },
          "abort_on_commit_errors": {
            "type": "boolean",
            "title": "Abort On Commit Errors"
          },
          "skip_control_on_read_failure": {
            "type": "boolean",
            "title": "Skip Control On Read Failure"
          },
          "log_level": {
            "type": "integer",
            "title": "Log Level"
          }
        },
        "type": "object",
        "required": [
          "name",
          "experiment",
          "vial_layout",
          "vials",
          "hardware",
          "controllers",
          "serial",
          "history",
          "enable_control",
          "interval",
          "raise_loop_exceptions",
          "abort_on_control_errors",
          "abort_on_commit_errors",
          "skip_control_on_read_failure",
          "log_level"
        ],
        "title": "EvolverConfigWithoutDefaults"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HistoricDatum": {
        "properties": {
          "timestamp": {
            "type": "number",
            "title": "Timestamp"
          },
          "kind": {
            "type": "string",
            "title": "Kind"
          },
          "vial": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vial"
          },
          "data": {
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "kind",
          "vial",
          "data"
        ],
        "title": "HistoricDatum"
      },
      "HistoryResult": {
        "properties": {
          "data": {
            "additionalProperties": {
              "items": {
                "$ref": "#/components/schemas/HistoricDatum"
              },
              "type": "array"
            },
            "type": "object",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "HistoryResult"
      },
      "SchemaResponse": {
        "properties": {
          "classinfo": {
            "type": "string",
            "title": "Classinfo",
            "description": "fully qualified class name"
          },
          "config": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config"
          },
          "input": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input"
          },
          "output": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output"
          }
        },
        "type": "object",
        "required": [
          "classinfo"
        ],
        "title": "SchemaResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "evolver__calibration__interface__Calibrator__Config": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "dir": {
            "type": "string",
            "format": "path",
            "title": "Dir",
            "description": "Directory for saving new configuration files to."
          },
          "created": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created",
            "description": "The creation timestamp"
          },
          "expire": {
            "anyOf": [
              {
                "type": "string",
                "format": "duration"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expire",
            "description": "The amount of time after which the associated object is considered stale. `datetime.timedelta.max` := forever (the default).",
            "default": "P168D"
          },
          "input_transformer": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConfigDescriptor"
              },
              {
                "$ref": "#/components/schemas/evolver__calibration__interface__Transformer__Config"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input Transformer"
          },
          "output_transformer": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConfigDescriptor"
              },
              {
                "$ref": "#/components/schemas/evolver__calibration__interface__Transformer__Config"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output Transformer"
          },
          "calibration_file": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Calibration File"
          }
        },
        "type": "object",
        "title": "Config"
      },
      "evolver__calibration__interface__Transformer__Config": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "dir": {
            "type": "string",
            "format": "path",
            "title": "Dir",
            "description": "Directory for saving new configuration files to."
          },
          "created": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created",
            "description": "The creation timestamp"
          },
          "expire": {
            "anyOf": [
              {
                "type": "string",
                "format": "duration"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expire",
            "description": "The amount of time after which the associated object is considered stale. `datetime.timedelta.max` := forever (the default).",
            "default": "P168D"
          }
        },
        "type": "object",
        "title": "Config"
      },
      "evolver__connection__interface__Connection__Config": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          }
        },
        "type": "object",
        "title": "Config"
      },
      "evolver__controller__interface__Controller__Config": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          }
        },
        "type": "object",
        "title": "Config"
      },
      "evolver__hardware__interface__HardwareDriver__Config": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "calibrator": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ConfigDescriptor"
              },
              {
                "$ref": "#/components/schemas/evolver__calibration__interface__Calibrator__Config"
              },
              {
                "type": "null"
              }
            ],
            "title": "Calibrator",
            "description": "The calibrator used to both calibrate and transform Input and/or Output data."
          }
        },
        "type": "object",
        "title": "Config"
      },
      "evolver__history__interface__History__Config": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          }
        },
        "type": "object",
        "title": "Config"
      }
    }
  }
}